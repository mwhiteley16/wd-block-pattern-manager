{"version":3,"names":["registerPlugin","wp","plugins","PluginDocumentSettingPanel","editPost","_wp$components","components","ToggleControl","TextControl","CheckboxControl","_wp$data","data","useDispatch","useSelect","select","compose","__","i18n","PostTypesPanel","meta","getEditedPostAttribute","postTypes","getPostTypes","filteredPostTypes","filter","postType","viewable","name","console","log","React","createElement","title","className","Fragment","class","style","_defineProperty","color","marginTop","fontSize","map","checkboxKey","concat","slug","isChecked","key","label","labels","singular_name","checked","onChange","value","newMeta","_objectSpread","updateMeta","PatternCategoriesPanel","patternCategories","getBlockPatternCategories","category","PatternOptions","enablePageCreationPattern","wd_enable_page_creation_pattern","href","target","rel","render"],"sources":["../src/index.js"],"sourcesContent":["/*\n * WordPress dependencies\n */\nconst { registerPlugin } = wp.plugins;\nconst { PluginDocumentSettingPanel } = wp.editPost;\nconst { ToggleControl, TextControl, CheckboxControl } = wp.components;\nconst { useDispatch, useSelect, select } = wp.data;\nconst { compose } = wp.compose;\nconst { __ } = wp.i18n;\n\n/*\n * Post Types panel\n */\nconst PostTypesPanel = () => {\n\n\t// Set up useDispatch to save post meta on post edit.\n\tconst { editPost } = useDispatch('core/editor');\n\n\t// Get meta from current post.\n\tconst meta = useSelect((select) => select('core/editor').getEditedPostAttribute('meta'));\n\n\t// Get all available Post Types to use in the post type selector.\n\tconst postTypes = useSelect((select) => select('core').getPostTypes({}));\n\n\t// Only output \"public\" Post Types. Additionally, exclude \"Media\".\n\tconst filteredPostTypes = postTypes ? postTypes.filter((postType) => postType.viewable !== false && postType.name !== 'Media') : [];\n\n\tconsole.log(filteredPostTypes);\n\n\t// Update meta functionality.\n\tconst updateMeta = (key, value) => {\n\t\tconst newMeta = { ...(meta || {}), [key]: value };\n\t\teditPost({ meta: newMeta });\n\t};\n\n\treturn (\n\t\t<PluginDocumentSettingPanel\n\t\t\tname=\"wd-block-pattern-manager-post-types\"\n\t\t\ttitle={__('Select Post Types', 'wd-block-pattern-manager')}\n\t\t\tclassName=\"wd-block-pattern-manager-post-types\"\n\t\t>\n\t\t\t{filteredPostTypes && (\n\t\t\t\t<>\n\t\t\t\t\t<p class=\"components-base-control__help\" style={{ color: 'blue', marginTop: '10px', fontSize: '12px', color: 'rgb(117, 117, 117)' }}>\n\t\t\t\t\t\t{__('Choose what post types you would like this pattern to be available to use in.', 'wd-block-pattern-manager')}\n\t\t\t\t\t</p>\n\t\t\t\t\t{filteredPostTypes.map((postType) => {\n\t\t\t\t\t\tconst checkboxKey = `wd_${postType.slug}_pattern_display`;\n\t\t\t\t\t\tconst isChecked = meta && meta[checkboxKey];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\t\tkey={checkboxKey}\n\t\t\t\t\t\t\t\tlabel={postType.labels.singular_name}\n\t\t\t\t\t\t\t\tchecked={!!isChecked}\n\t\t\t\t\t\t\t\tonChange={(value) => updateMeta(checkboxKey, value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</>\n\t\t\t)}\t\t\t\n\t\t</PluginDocumentSettingPanel>\n\t);\n};\n\n/*\n * Pattern Categories panel\n */\nconst PatternCategoriesPanel = () => {\n\n\t// Set up useDispatch to save post meta on post edit.\n\tconst { editPost } = useDispatch('core/editor');\n\n\t// Get meta from current post.\n\tconst meta = useSelect((select) => select('core/editor').getEditedPostAttribute('meta'));\n\n\t// Get all registered pattern categories.\n\tconst patternCategories = useSelect((select) => select('core').getBlockPatternCategories());\n\n\t// Update meta functionality.\n\tconst updateMeta = (key, value) => {\n\t\tconst newMeta = { ...(meta || {}), [key]: value };\n\t\teditPost({ meta: newMeta });\n\t};\n\n\treturn (\n\t\t<PluginDocumentSettingPanel\n\t\t\tname=\"wd-block-pattern-manager-categories\"\n\t\t\ttitle={__('Set Pattern Categories', 'wd-block-pattern-manager')}\n\t\t\tclassName=\"wd-block-pattern-manager-categories\"\n\t\t>\n\n\t\t\t{patternCategories && (\n\t\t\t\t<>\n\t\t\t\t\t<p class=\"components-base-control__help\" style={{ color: 'blue', marginTop: '10px', fontSize: '12px', color: 'rgb(117, 117, 117)' }}>\n\t\t\t\t\t\t{__('Choose what categories you would like this pattern assigned to.', 'wd-block-pattern-manager')}\n\t\t\t\t\t</p>\n\t\t\t\t\t{patternCategories.map((category) => {\n\t\t\t\t\t\tconst checkboxKey = `wd_${category.name}_pattern_category`;\n\t\t\t\t\t\tconst isChecked = meta && meta[checkboxKey];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CheckboxControl\n\t\t\t\t\t\t\t\tkey={category.name}\n\t\t\t\t\t\t\t\tlabel={category.label}\n\t\t\t\t\t\t\t\tchecked={!!isChecked}\n\t\t\t\t\t\t\t\tonChange={(value) => updateMeta(checkboxKey, value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t\n\t\t</PluginDocumentSettingPanel>\n\t);\n};\n\n/*\n * Pattern Options panels.\n */\nconst PatternOptions = () => {\n\n\t// Set up useDispatch to save post meta on post edit.\n\tconst { editPost } = useDispatch('core/editor');\n\n\t// Get meta from current post.\n\tconst meta = useSelect((select) => select('core/editor').getEditedPostAttribute('meta'));\n\n\t// Get current meta if it exists.\n\tconst enablePageCreationPattern = meta && meta.wd_enable_page_creation_pattern;\n\n\t// Update meta functionality.\n\tconst updateMeta = (key, value) => {\n\t\tconst newMeta = { ...(meta || {}), [key]: value };\n\t\teditPost({ meta: newMeta });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<PluginDocumentSettingPanel\n\t\t\t\tname=\"wd-block-pattern-manager-options\"\n\t\t\t\ttitle={__('Pattern Options', 'wd-block-pattern-manager')}\n\t\t\t\tclassName=\"wd-block-pattern-manager-options\"\n\t\t\t>\n\t\t\t\t<>\n\t\t\t\t\t<p class=\"components-base-control__help\" style={{ color: 'blue', marginTop: '10px', fontSize: '12px', color: 'rgb(117, 117, 117)' }}>\n\t\t\t\t\t\t{__('Use this pattern as a page creation template. ', 'wd-block-pattern-manager')}\n\t\t\t\t\t\t<a href=\"https://whiteleydesigns.com\" target=\"_blank\" rel=\"noopener noreferrer\">{__('Click here', 'wd-block-pattern-manager')}</a>{__(' to learn more about creation patterns.')}\n\t\t\t\t\t</p>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={__('Page Creation Pattern', 'wd-block-pattern-manager')}\n\t\t\t\t\t\tchecked={!!enablePageCreationPattern}\n\t\t\t\t\t\tonChange={(value) => updateMeta('wd_enable_page_creation_pattern', value)}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t\t\n\t\t\t</PluginDocumentSettingPanel>\n\n\t\t\t<PostTypesPanel />\n\t\t\t<PatternCategoriesPanel />\n\t\t</>\n\t);\n};\n\nregisterPlugin('wd-block-pattern-manager-panel', {\n\trender: PatternOptions,\n});\n"],"mappings":"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"}